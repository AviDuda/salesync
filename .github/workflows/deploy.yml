name: 🚀 Deploy
on:
  push:
    branches:
      - main
      - dev
  pull_request: {}

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm

      - name: 📥 Download deps
        run: pnpm install --frozen-lockfile

      - name: 🔬 Lint
        run: pnpm run lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm

      - name: 📥 Download deps
        run: pnpm install --frozen-lockfile

      - name: 🔎 Type check
        run: pnpm run --if-present typecheck

  vitest:
    name: ⚡ Vitest
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm

      - name: 📥 Download deps
        run: pnpm install --frozen-lockfile

      - name: ⚡ Run vitest
        run: pnpm run test --run --coverage

  cypress:
    name: ⚫️ Cypress
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🏄 Copy test env vars
        run: cp .env.example .env

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm

      - name: 📥 Download deps
        run: pnpm install --frozen-lockfile

      - name: Get pnpm cache directory path
        id: pnpm-cache-dir
        run: echo "PNPM_STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Get cypress cache directory path
        id: cypress-cache-dir
        run: echo "CYPRESS_BIN_PATH=$(npx cypress cache path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: pnpm-cache
        with:
          path: |
            ${{ steps.pnpm-cache-dir.outputs.PNPM_STORE_PATH }}
            ${{ steps.cypress-cache-dir.outputs.CYPRESS_BIN_PATH }}
          key: ${{ runner.os }}-pnpm-cypress-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-cypress-

      - name: 🐳 Docker compose
        # the sleep is just there to give time for postgres to get started
        run: docker-compose up -d && sleep 3
        env:
          DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/postgres"

      - name: 🛠 Setup Database
        run: pnpm exec prisma migrate reset --force

      - name: ⚙️ Build
        run: pnpm run build

      - name: 🌳 Cypress run
        uses: cypress-io/github-action@v5
        with:
          start: pnpm run start:mocks
          wait-on: "http://localhost:8811"
          install: false
        env:
          PORT: "8811"

      - name: Archive test screenshots
        uses: actions/upload-artifact@v3
        with:
          name: screenshots
          path: cypress/screenshots
        if: ${{ failure() }}

      - name: Archive test downloads
        uses: actions/upload-artifact@v3
        with:
          name: downloads
          path: cypress/downloads
        if: ${{ failure() }}

      - name: Archive test videos
        uses: actions/upload-artifact@v3
        with:
          name: videos
          path: cypress/videos
        if: ${{ failure() }}

      - name: Archive accessibility violations
        uses: actions/upload-artifact@v3
        with:
          name: accessibility-violations
          path: "**/a11y/"
          if-no-files-found: "ignore"

  build:
    name: 🐳 Build
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.1
        id: app_name
        with:
          file: "fly.toml"
          field: "app"

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🔑 Fly Registry Auth
        uses: docker/login-action@v2
        with:
          registry: registry.fly.io
          username: x
          password: ${{ secrets.FLY_API_TOKEN }}

      - name: 🐳 Docker build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,mode=max,scope=${{ github.workflow }}

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [lint, typecheck, vitest, cypress, build]
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.1
        id: app_name
        with:
          file: "fly.toml"
          field: "app"

      - name: 🚀 Deploy Staging
        if: ${{ github.ref == 'refs/heads/dev' }}
        uses: superfly/flyctl-actions@1.3
        with:
          args: "deploy --app ${{ steps.app_name.outputs.value }}-staging --image registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🚀 Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: superfly/flyctl-actions@1.3
        with:
          args: "deploy --image registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
